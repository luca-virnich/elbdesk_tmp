name: Migrations Jobs

on:
  workflow_dispatch:
    inputs:
      NAME:
        description: "Name of the app"
        required: true
        type: string
        default: "coe_elbdesk_cloud"
      PATH:
        description: "Path to the app"
        required: true
        type: string
        default: "servers/elbdesk_server"
      RUN_MODE:
        description: "Run mode"
        required: true
        type: string
        default: "test"
      DATABASE_NAME:
        description: "Database name"
        required: true
        type: string
        default: "postgres_test_database"
      DATABASE_USER:
        description: "Database user"
        required: true
        type: string
        default: "postgres_test_user"
      DATABASE_PORT:
        description: "Database port"
        required: true
        type: string
        default: "5432:5432"
      OWNER:
        description: "Owner"
        required: true
        type: string
        default: "app-ahoi"

jobs:
  test-migrations:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    container:
      image: ghcr.io/app-ahoi/elbdesk-build:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD_TEST }}
          POSTGRES_DB: ${{ inputs.DATABASE_NAME }}
          POSTGRES_USER: ${{ inputs.DATABASE_USER }}
        ports:
          - "${{ inputs.DATABASE_PORT }}"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ${{ inputs.PATH }}
    steps:
      - name: Get token from Github App
        uses: actions/create-github-app-token@v2
        id: app_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          # owner is required, otherwise the creds will fail the checkout step
          owner: ${{ inputs.OWNER }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app_token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.ref }}

      # - name: Set working directory
      #   run: |
      #     cd ${{ inputs.PATH }}
      - name: Configure Git for private packages
        run: |
          git config --global url."https://x-access-token:${{ steps.app_token.outputs.token }}@github.com/".insteadOf "https://github.com/"

      - name: Configure Git safe directories
        run: |
          git config --global --add safe.directory /usr/local/flutter
          git config --global --add safe.directory ${{ inputs.PATH }}


      # - name: Print working directory
      #   run: pwd

      # - name: List pub-cache directory
      #   run: ls -la /root/.pub-cache/
      # - name: List pub-cache bin directory
      #   run: ls -la /root/.pub-cache/bin
      # - name: List workspace directory
      #   run: ls -la /__w/
      # - name: List elbdesk_coe workspace directory
      #   run: ls -la /__w/elbdesk_coe/
      # - name: List elbdesk_coe directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/
      # - name: List elbdesk_coe server directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/servers/elbdesk_server/
      # - name: List elbdesk_client directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/servers/elbdesk_client/
      # - name: List elbdesk_app directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/apps/elbdesk_app/

      - name: List github directory
        run: ls -la /github
      # - name: List github home directory
      #   run: ls -la /github/home
      # - name: List github home pub-cache directory
      #   run: ls -la /github/home/.pub-cache
      # - name: List github home flutter directory
      #   run: ls -la /github/home/.flutter
      # - name: List github home serverpod directory
      #   run: ls -la /github/home/.serverpod
      # - name: List github home git config directory
      #   run: ls -la /github/home/.gitconfig
      # - name: List github home config directory
      #   run: ls -la /github/home/.config
          
      - name: Flutter, Dart and Serverpod CLI versions
        run: | 
          flutter --version
          dart --version
          serverpod version

      - name: Overwrite ${{ inputs.RUN_MODE }}.yaml with test_migrations.yaml
        run: |
          cp "config/${{ inputs.RUN_MODE }}.yaml" "config/${{ inputs.RUN_MODE }}.yaml.bak"
          cp config/test_migrations.yaml "config/${{ inputs.RUN_MODE }}.yaml"

      - name: Create passwords file
        shell: bash
        env:
          SERVERPOD_PASSWORDS: ${{ secrets.SERVERPOD_PASSWORDS }}
        run: |
          echo "$SERVERPOD_PASSWORDS" > config/passwords.yaml

      - name: Cache dart tool
        id: cache-dart-tool
        uses: actions/cache@v4
        with:
          path: |
            /github/home
            /root/.pub-cache/git
            /root/.pub-cache/hosted
            /root/.pub-cache/hosted-hashes
            /__w/elbdesk_coe/**/.dart_tool
          key: elbdesk-server-amd64-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            elbdesk-server-amd64-

      - name: Cache status
        run: |
          echo "Cache hit: ${{ steps.cache-dart-tool.outputs.cache-hit }}"
          echo "Cache primary key: ${{ steps.cache-dart-tool.outputs.cache-primary-key }}"
          echo "Cache matched key: ${{ steps.cache-dart-tool.outputs.cache-matched-key }}"

      - name: Get dependencies
        if: ${{ steps.cache-dart-tool.outputs.cache-hit != 'true' }}
        run: flutter pub get

      # - run: flutter pub get 2

      - name: Flutter, Dart and Serverpod CLI versions 002
        run: | 
          flutter --version
          dart --version
          serverpod version
      
      - name: Create migration
        id: create_migration
        shell: /usr/bin/bash +e {0}
        continue-on-error: true
        run: |
          echo "=== Starting migration ==="
          migration_output=$(serverpod create-migration 2>&1)
          migration_exit_code=$?
          echo "=== Migration output ==="
          echo "$migration_output"
          echo "=== Migration exit code: $migration_exit_code ==="

          # Use heredoc syntax for multiline output
          echo "migration_output<<EOF" >> $GITHUB_OUTPUT
          echo "$migration_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [[ "$migration_output" == *"No changes detected"* ]]; then
            echo "No database changes detected - continuing"
            exit 0
          elif [[ "$migration_output" == *"Migration aborted."* ]]; then
            echo "=== Migration aborted - exiting ==="
            exit 1
          else
            if [[ $migration_exit_code -ne 0 ]]; then
              echo "=== Migration failed - exiting ==="
              exit 1
            fi
            echo "=== Migration created - continuing ==="
            exit 0
          fi

      # - name: List pub-cache directory
      #   run: ls -la /root/.pub-cache/
      # - name: List pub-cache bin directory
      #   run: ls -la /root/.pub-cache/bin
      # - name: List elbdesk_coe workspace directory
      #   run: ls -la /__w/elbdesk_coe/
      # - name: List elbdesk_coe directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/
      # - name: List elbdesk_coe server directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/servers/elbdesk_server/
      # - name: List elbdesk_client directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/servers/elbdesk_client/
      # - name: List elbdesk_app directory
      #   run: ls -la /__w/elbdesk_coe/elbdesk_coe/apps/elbdesk_app/

      # - name: List github directory
      #   run: ls -la /github
      # - name: List workflow directory
      #   run: ls -la /github/workflow
      # - name: List github home directory
      #   run: ls -la /github/home
      # - name: List github home pub-cache directory
      #   run: ls -la /github/home/.pub-cache
      # - name: List github home flutter directory
      #   run: ls -la /github/home/.flutter
      # - name: List github home serverpod directory
      #   run: ls -la /github/home/.serverpod
      # - name: List github home git config directory
      #   run: ls -la /github/home/.gitconfig
      # - name: List github home config directory
      #   run: ls -la /github/home/.config


      - name: Test migrations
        run: dart bin/main.dart --mode ${{ inputs.RUN_MODE }} --role maintenance --apply-migrations

      - name: Check migration test status
        if: ${{ failure() }}
        run: |
          echo "Migration tests failed"
          exit 1