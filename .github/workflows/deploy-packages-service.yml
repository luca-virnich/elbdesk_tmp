name: Deploy Packages Service

on:
  workflow_dispatch:
    inputs:
      sanity_check:
        description: 'Do you want to deploy the packages service?'
        required: true
        default: false
        type: boolean

jobs:
  deploy-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure storage directory exists on VPS
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            sudo mkdir -p /var/packages/storage
            sudo chown -R 101:101 /var/packages/storage
            sudo chmod -R 755 /var/packages/storage
          EOF

      - name: Create nginx config directory and copy config
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /var/packages/nginx"
          scp .docker/nginx/default.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/packages/nginx/default.conf

      - name: Deploy packages service
        run: |
          docker compose -f .docker/docker-compose-packages-service.yaml pull
          docker compose -f .docker/docker-compose-packages-service.yaml up -d
        env:
          DOCKER_HOST: "ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
          SERVICE_HOST: packages.coe.elbdesk.cloud
          PACKAGES_SERVICE_AUTH: ${{ secrets.PACKAGES_SERVICE_AUTH }}

      - name: Cleanup SSH keys
        run: rm -rf ~/.ssh
