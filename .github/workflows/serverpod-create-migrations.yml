name: Create Serverpod Migrations

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      # IMAGE_NAME:
      #   required: true
      #   type: string
      GHCR_ORG:
        required: true
        type: string
      OWNER:
        required: true
        type: string
      SERVERPOD_SERVER:
        required: true
        type: string
      SHOULD_RUN_JOB:
        required: true
        type: boolean
      FORCE_MIGRATION:
        required: true
        default: false
        type: boolean
    secrets:
      EMAIL:
        required: true
      DATABASE_PASSWORD:
        required: true
      SERVERPOD_PASSWORDS:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      APP_ID:
        required: true
      APP_PRIVATE_KEY:
        required: true

jobs:
  create-serverpod-migrations:
    if: inputs.SHOULD_RUN_JOB
    name: Create Serverpod Migrations
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ${{ fromJson(inputs.SERVERPOD_SERVER).PATH }}
    steps:
      - name: Get token from Github App
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          # owner is required, otherwise the creds will fail the checkout step
          owner: ${{ inputs.OWNER }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app_token.outputs.token }}

      - name: Configure Git for private packages
        run: |
          git config --global url."https://x-access-token:${{ steps.app_token.outputs.token }}@github.com/".insteadOf "https://github.com/"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.32.5

      - run: flutter --version
      - run: dart --version

      - name: Install Serverpod CLI
        run: dart pub global activate serverpod_cli ${{ fromJson(inputs.SERVERPOD_SERVER).SERVERPOD_VERSION }}

      - name: Create passwords file
        env:
          SERVERPOD_PASSWORDS: ${{ secrets.SERVERPOD_PASSWORDS }}
        run: echo "$SERVERPOD_PASSWORDS" > config/passwords.yaml

      - run: flutter pub get
      
      - name: Create migration
        if: ${{ !inputs.FORCE_MIGRATION && !contains(github.event.pull_request.labels.*.name, fromJson(inputs.SERVERPOD_SERVER).FORCE_MIGRATION_LABEL) }}
        id: create_migration
        shell: /usr/bin/bash +e {0}
        # continue-on-error: true
        run: |
          echo "=== Starting migration ==="
          migration_output=$(serverpod create-migration 2>&1)
          migration_exit_code=$?
          echo "=== Migration output ==="
          echo "$migration_output"
          echo "=== Migration exit code: $migration_exit_code ==="

          # Use heredoc syntax for multiline output
          echo "migration_output<<EOF" >> $GITHUB_OUTPUT
          echo "$migration_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [[ "$migration_output" == *"No changes detected"* ]]; then
            echo "No database changes detected - continuing"
            exit 0
          elif [[ "$migration_output" == *"Migration aborted."* ]]; then
            echo "=== Migration aborted - exiting ==="
            exit 1
          else
            if [[ $migration_exit_code -ne 0 ]]; then
              echo "=== Migration failed - exiting ==="
              exit 1
            fi
            echo "=== Migration created - continuing ==="
            exit 0
          fi

      - name: Create FORCE migration
        if: ${{ inputs.FORCE_MIGRATION || contains(github.event.pull_request.labels.*.name, fromJson(inputs.SERVERPOD_SERVER).FORCE_MIGRATION_LABEL) }}
        id: create_force_migration
        shell: /usr/bin/bash +e {0}
        run: |
          echo "=== Starting migration ==="
          migration_output=$(serverpod create-migration --force 2>&1)
          migration_exit_code=$?
          echo "=== Migration output ==="
          echo "$migration_output"
          echo "=== Migration exit code: $migration_exit_code ==="

          # Use heredoc syntax for multiline output
          echo "migration_output<<EOF" >> $GITHUB_OUTPUT
          echo "$migration_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [[ "$migration_output" == *"No changes detected"* ]]; then
            echo "No database changes detected - continuing"
            exit 0
          elif [[ "$migration_output" == *"Migration aborted."* ]]; then
            echo "=== Migration aborted - exiting ==="
            exit 1
          else
            if [[ $migration_exit_code -ne 0 ]]; then
              echo "=== Migration failed - exiting ==="
              exit 1
            fi
            echo "=== Migration created - continuing ==="
            exit 0
          fi

      # - name: Delete .gitignore file
      #   run: rm -f .gitignore

      # - name: Commit and push migrations
      #   run: |
      #     git add migrations/*
      #     git commit -m "Auto-generated database migrations" || echo "No changes to commit"
      #     git push

      - name: Commit and push migrations
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add -f migrations/*
          if git diff --staged --quiet; then
            echo "No changes to commit in migrations directory"
          else
            git commit -m "Auto-generated database migrations"
            git push
          fi
