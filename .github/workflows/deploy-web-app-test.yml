name: Deploy web app test

on:
  workflow_dispatch:
    inputs:
      WEB_APP_VERSION:
        description: 'Version for the web app build (semver format: X.Y.Z[+build])'
        required: true
        default: '1.0.0'
        type: string

permissions:
  contents: write
  packages: write

jobs:
  # Builds and pushes Docker images for each Flutter app defined in FLUTTER_APPS.
  # This job runs after the serverpod server images are built and uses a matrix strategy
  # to process multiple apps in parallel. Each app's image is built according to its configuration
  # and pushed to the GitHub Container Registry with appropriate tags and labels.
  build-and-push-web-app-image:
    if: github.ref_name == 'test'
    uses: ./.github/workflows/flutter-app-build-and-push-image.yml
    with:
      # SHOULD_RUN_JOB: "${{ github.event.pull_request.changed_files > 0 && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).PATH) && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).PACKAGES_PATH) && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).SERVERPOD_CLIENT_PATH) }}"
      SHOULD_RUN_JOB: true
      REGISTRY: "ghcr.io"
      GHCR_ORG: "app-ahoi"
      OWNER: ${{ github.repository_owner }}
      FLUTTER_APP: '{
            "NAME": "coe_elbdesk_app",
            "PATH": "apps/elbdesk_app",
            "PACKAGES_PATH": "packages",
            "SERVERPOD_CLIENT_PATH": "servers/elbdesk_client",
            "RUN_MODE": "test",
            "APP_HOST": "test.coe.elbdesk.cloud",
            "API_HOST": "https://test.api.coe.elbdesk.cloud/",
            "FLUTTER_VERSION": "3.32.5"
          }'
      IMAGE_NAME: ${{ github.repository }}
      WEB_APP_VERSION: ${{ inputs.WEB_APP_VERSION }}
    secrets:
      EMAIL: ${{ secrets.EMAIL }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD_TEST }}
      SERVERPOD_PASSWORDS: ${{ secrets.SERVERPOD_PASSWORDS }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      APP_ID: ${{ secrets.APP_ID }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}



  # Deploys Flutter web applications to the target environment.
  # This job runs after the Serverpod servers are deployed and uses a matrix strategy
  # to deploy multiple Flutter web apps in parallel. Each app is deployed using
  # Docker Compose with the necessary environment variables and secrets.
  # The deployment includes setting up SSL certificates through Traefik and
  # configuring the web server for each app instance.
  deploy-web-app:
    if: github.ref_name == 'test'
    needs: build-and-push-web-app-image
    uses: ./.github/workflows/flutter-app-deploy-app.yml
    name: Deploy to ${{ github.ref_name }}
    with:
      # SHOULD_RUN_JOB: "${{ github.event.pull_request.changed_files > 0 && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).PATH) && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).PACKAGES_PATH) && contains(github.event.pull_request.files.*.filename, toJson(matrix.flutter_app).SERVERPOD_CLIENT_PATH) }}"
      SHOULD_RUN_JOB: true
      REGISTRY: "ghcr.io"
      GHCR_ORG: "app-ahoi"
      OWNER: ${{ github.repository_owner }}
      FLUTTER_APP: '{
            "NAME": "coe_elbdesk_app",
            "PATH": "apps/elbdesk_app",
            "PACKAGES_PATH": "packages",
            "SERVERPOD_CLIENT_PATH": "servers/elbdesk_client",
            "RUN_MODE": "test",
            "APP_HOST": "test.coe.elbdesk.cloud",
            "API_HOST": "https://test.api.coe.elbdesk.cloud/",
            "FLUTTER_VERSION": "3.32.5"
          }'
    secrets:
      EMAIL: ${{ secrets.EMAIL }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      APP_ID: ${{ secrets.APP_ID }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
